/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemadearmariosakc;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.swing.*;
import java.util.*;
import java.io.*;
import java.util.Scanner;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xwpf.usermodel.*;
import org.netbeans.api.print.PrintManager;
import org.openide.util.*;
/**
 *
 * @author Reparos
 */
public class SistemadeArmariosGUI extends javax.swing.JFrame  {
  int     i=0;
  String  separator = System.getProperty("line.separator");
  Scanner fileScanner ;
  String  line;
  String  ToReplace;
  String  Replacement;
  String  File;
  int Rowcount=1;
  Image img;
  Graphics g; 
  boolean LoggedIn= false;

List<String> User = new ArrayList();
List<String> Pass = new ArrayList();
    /**
     * Creates new form SistemadeArmarios
     */
    public SistemadeArmariosGUI() {
       
        initComponents();
    }
     private static void WritetoUserFile(String user) {
        OutputStream os = null;
        try {
            os = new FileOutputStream(new File("UDB.txt"), true);
            os.write(user.getBytes(), 0, user.length());
            os.write(System.getProperty("line.separator").getBytes());
        } catch (IOException e) {
        }finally{
            try {
                os.flush();
                os.close();
            } catch (IOException e) {
            }
        }
    }
      private static void WritetoPassFile(String pass) {
        OutputStream os = null;
        try {
            os = new FileOutputStream(new File("PDB.txt"), true);
            os.write(pass.getBytes(), 0, pass.length());
            os.write(System.getProperty("line.separator").getBytes());
        } catch (IOException e) {
        }finally{
            try {
                os.flush();
                os.close();
            } catch (IOException e) {
            }
        }
    }

    public void ReadFromUserFile ()
    { 

  // We need to provide file path as the parameter: 
  // double backquote is to avoid compiler interpret words 
  // like \test as \t (ie. as a escape sequence) 
   File file = new File("UDB.txt"); 
  
  BufferedReader br=null; 
        try {
            br = new BufferedReader(new FileReader(file));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    String user;
      try {
          while ((user = br.readLine()) != null) 
              User.add(user);
      } catch (IOException ex) {
          Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
      }
  
} 
    public void ReadFromPasswordFile ()
    { 

  // We need to provide file path as the parameter: 
  // double backquote is to avoid compiler interpret words 
  // like \test as \t (ie. as a escape sequence) 
   File file = new File("PDB.txt"); 
  
  BufferedReader br=null; 
        try {
            br = new BufferedReader(new FileReader(file));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    String pass;
      try {
          while ((pass = br.readLine()) != null) 
              Pass.add(pass);
      } catch (IOException ex) {
          Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
      }
  
} 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        LogTUser = new javax.swing.JTextField();
        LogPPass = new javax.swing.JPasswordField();
        BttnLogin = new javax.swing.JButton();
        BttnReg = new javax.swing.JButton();
        Armarios = new javax.swing.JPanel();
        ArmLNumArm = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ArmLNumPat = new javax.swing.JLabel();
        ArmLUsuario = new javax.swing.JLabel();
        ArmLSetor = new javax.swing.JLabel();
        try {
            ArmTNumArm =(javax.swing.JTextField)java.beans.Beans.instantiate(getClass().getClassLoader(), "sistemadearmariosakc.SistemadeArmarios_ArmTNumArm");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        try {
            ArmTChapa =(javax.swing.JTextField)java.beans.Beans.instantiate(getClass().getClassLoader(), "sistemadearmariosakc.SistemadeArmarios_ArmTNumPat");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        try {
            ArmTUsuario =(javax.swing.JTextField)java.beans.Beans.instantiate(getClass().getClassLoader(), "sistemadearmariosakc.SistemadeArmarios_ArmTUsuario");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        try {
            ArmTSetor =(javax.swing.JTextField)java.beans.Beans.instantiate(getClass().getClassLoader(), "sistemadearmariosakc.SistemadeArmarios_ArmTSetor");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        ArmBttnAdd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ArmBttnDel = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        final BufferedImage image1;
        ConDisp = new javax.swing.JTextArea() {

            protected void paintComponent(Graphics g) {
                try
                {final BufferedImage image1 = ImageIO.read(new File("aethra.jpg"));
                    super.paintComponent(g);{

                        g.drawImage(image1,0, 0, this);
                    }
                }
                catch
                (IOException e)
                {}

            }
        }

        ;
        ConTChapa = new javax.swing.JTextField();
        ConTNum = new javax.swing.JTextField();
        ConTNome = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        Relatorios = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        final BufferedImage image;
        RelDisp = new javax.swing.JTextArea() {

            protected void paintComponent(Graphics g) {
                try
                {final BufferedImage image = ImageIO.read(new File("aethra.jpg"));
                    super.paintComponent(g);{

                        g.drawImage(image,0, 0, this);
                    }
                }
                catch
                (IOException e)
                {}
                putClientProperty("print.printable", Boolean.TRUE);
            }
        }
        ;
        BttnArmPUs = new javax.swing.JButton();
        RelTNome = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        BttnRelLimpar = new javax.swing.JButton();
        RelTChapa = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        BttnRelArmChapa = new javax.swing.JButton();
        BttnRelPrint = new javax.swing.JButton();
        BttnRelList = new javax.swing.JButton();
        RelBttnNum = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        RelTNum = new javax.swing.JTextField();
        BttnArmDisp = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 768));

        jTabbedPane1.setName("Reg Arm."); // NOI18N

        jPanel4.setFocusCycleRoot(true);
        jPanel4.setNextFocusableComponent(jTabbedPane1);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistemadearmariosakc/aethra.jpg"))); // NOI18N

        jLabel5.setText("Usuario:");

        jLabel7.setText("Senha:");

        LogTUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogTUserActionPerformed(evt);
            }
        });

        BttnLogin.setText("Entrar");
        BttnLogin.setToolTipText("");
        BttnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BttnLoginActionPerformed(evt);
            }
        });

        BttnReg.setText("Registrar");
        BttnReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BttnRegActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(BttnLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BttnReg, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LogPPass)
                            .addComponent(LogTUser)))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(LogTUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(LogPPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BttnLogin)
                    .addComponent(BttnReg))
                .addGap(0, 884, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Login", jPanel4);

        Armarios.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Armários", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 12))); // NOI18N

        jLabel2.setText("Numero de Armário:");

        ArmLNumPat.setText("Chapa AKC:");

        ArmLUsuario.setText("Funcionario:");

        ArmLSetor.setText("Setor do Armário:");

        ArmBttnAdd.setText("Adicionar Armário");
        ArmBttnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArmBttnAddActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistemadearmariosakc/0.jpg"))); // NOI18N
        jLabel1.setToolTipText("");
        jLabel1.setPreferredSize(new java.awt.Dimension(610, 614));

        ArmBttnDel.setText("Remover Armário");
        ArmBttnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArmBttnDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ArmariosLayout = new javax.swing.GroupLayout(Armarios);
        Armarios.setLayout(ArmariosLayout);
        ArmariosLayout.setHorizontalGroup(
            ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArmariosLayout.createSequentialGroup()
                .addGroup(ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ArmLNumArm)
                    .addGroup(ArmariosLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ArmariosLayout.createSequentialGroup()
                                    .addGroup(ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ArmLUsuario, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(ArmLSetor, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(ArmLNumPat, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(ArmTUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ArmTChapa, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ArmTSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ArmariosLayout.createSequentialGroup()
                                    .addComponent(ArmBttnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ArmBttnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(ArmariosLayout.createSequentialGroup()
                                    .addGap(120, 120, 120)
                                    .addComponent(ArmTNumArm, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(137, Short.MAX_VALUE))
        );

        ArmariosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ArmLNumPat, ArmLSetor, ArmLUsuario, jLabel2});

        ArmariosLayout.setVerticalGroup(
            ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArmariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ArmTNumArm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ArmTChapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ArmLNumPat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ArmTUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ArmLUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ArmTSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ArmLSetor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ArmariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ArmBttnAdd)
                    .addComponent(ArmBttnDel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 574, Short.MAX_VALUE)
                .addComponent(ArmLNumArm)
                .addContainerGap(374, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reg. de Armarios", Armarios);

        ConDisp.setColumns(20);
        ConDisp.setRows(5);
        jScrollPane2.setViewportView(ConDisp);

        ConTChapa.setName("ConTChapa");

        ConTNome.setName("ConTNome");

        jLabel9.setText("Funcionario:");

        jLabel10.setText("Chapa AKC:");

        jLabel11.setText("Numero do Armário:");

        jButton2.setText("Armarios Disponiveis");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Armarios por Nome");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Limpar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Consulta Geral");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Armarios por Numero");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Armarios por Chapa");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton5)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ConTNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ConTChapa)
                                    .addComponent(ConTNum, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConTChapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConTNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(490, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consulta", jPanel5);

        Relatorios.setName("Relatorios"); // NOI18N
        Relatorios.setVisible(true);

        RelDisp.setColumns(20);
        RelDisp.setRows(5);
        jScrollPane1.setViewportView(RelDisp);

        javax.swing.GroupLayout RelatoriosLayout = new javax.swing.GroupLayout(Relatorios.getContentPane());
        Relatorios.getContentPane().setLayout(RelatoriosLayout);
        RelatoriosLayout.setHorizontalGroup(
            RelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RelatoriosLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
        );
        RelatoriosLayout.setVerticalGroup(
            RelatoriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
        );

        BttnArmPUs.setText("Armários por Usuario");
        BttnArmPUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BttnArmPUsActionPerformed(evt);
            }
        });

        RelTNome.setName("RelTNome"); // NOI18N

        jLabel6.setText("Funcionario:");

        BttnRelLimpar.setText("Limpar");
        BttnRelLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BttnRelLimparActionPerformed(evt);
            }
        });

        RelTChapa.setName("RelTArm"); // NOI18N

        jLabel8.setText("Chapa AKC:");

        BttnRelArmChapa.setText("Armarios por Chapa");
        BttnRelArmChapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BttnRelArmChapaActionPerformed(evt);
            }
        });

        BttnRelPrint.setText("Imprimir Relatório");
        BttnRelPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BttnRelPrintActionPerformed(evt);
            }
        });

        BttnRelList.setText("Listar Armarios");
        BttnRelList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BttnRelListActionPerformed(evt);
            }
        });

        RelBttnNum.setText("Armarios por Numero");
        RelBttnNum.setName(""); // NOI18N
        RelBttnNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RelBttnNumActionPerformed(evt);
            }
        });

        jLabel3.setText("Numero do Armário:");

        BttnArmDisp.setText("Armarios Disponiveis");
        BttnArmDisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BttnArmDispActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Relatorios)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel8))
                                    .addComponent(jLabel3))
                                .addGap(49, 49, 49)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(RelTNome, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(RelTChapa)
                                        .addComponent(RelTNum, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BttnArmDisp, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BttnArmPUs, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BttnRelArmChapa, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(RelBttnNum)
                                    .addComponent(BttnRelPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BttnRelList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BttnRelLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Relatorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RelTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RelTChapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RelTNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BttnRelLimpar)
                    .addComponent(BttnArmPUs)
                    .addComponent(BttnArmDisp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BttnRelPrint)
                    .addComponent(BttnRelArmChapa)
                    .addComponent(BttnRelList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RelBttnNum)
                .addContainerGap(468, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Relatórios", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1314, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        getAccessibleContext().setAccessibleName("Frame1");

        setBounds(0, 0, 567, 884);
    }// </editor-fold>//GEN-END:initComponents

    private void ArmTNumArmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArmTNumArmActionPerformed
        // TODO add your handling code here:public class TextSearch
        
	 
    }//GEN-LAST:event_ArmTNumArmActionPerformed

    private void ArmBttnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArmBttnDelActionPerformed
         {
        if (LoggedIn==true){
            FileInputStream fis = null;
            try {
                fis = new FileInputStream("BD Sistema de Armários.xls");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

            HSSFWorkbook workbook = null;
            try {
                workbook = new HSSFWorkbook(fis);
            } catch (IOException ex) {
                Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            HSSFSheet sheet = workbook.getSheetAt(0);

            ArrayList<HSSFRow> toRemove = new ArrayList<>();
            Iterator<Row> rows= sheet.rowIterator();
            while (rows.hasNext ()){
                HSSFRow row = (HSSFRow) rows.next ();
                Iterator<Cell> cells = row.cellIterator ();
                while (cells.hasNext ()){
                    HSSFCell cell = (HSSFCell) cells.next ();

                    if (cell.toString().equals(ArmTNumArm.getText())){
                        toRemove.add(row);

                    }
                    for (i=0;i<toRemove.size();i++){
                        sheet.removeRow(toRemove.get(i));
                    }try {

                        fis.close();
                        try (FileOutputStream outFile = new FileOutputStream(new File("BD Sistema de Armários.xls"))) {
                            workbook.write(outFile);
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
JOptionPane.showMessageDialog(null,"Remoção Realizada com Sucesso!","Warning",JOptionPane.OK_OPTION);
        }
        
else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ArmBttnDelActionPerformed

    private void ArmBttnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArmBttnAddActionPerformed
        int result= JOptionPane.YES_NO_OPTION;
        if (LoggedIn==true){
        System.out.println(LoggedIn);    
                JOptionPane.showConfirmDialog (null, "Deseja adicionar outro armario?","Warning",result);

        if (result==JOptionPane.YES_OPTION) {

            System.out.println("Write data to an Excel Sheet");
            FileInputStream fis = null;
            try {
                fis = new FileInputStream(new File("BD Sistema de Armários.xls"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            HSSFWorkbook workBook = null;
            try {
                workBook = new HSSFWorkbook(fis);
            } catch (IOException ex) {
                Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            HSSFSheet spreadSheet = workBook.getSheetAt(0);
            HSSFRow row;
            HSSFCell cell;
            Rowcount=spreadSheet.getLastRowNum()+1;

            System.out.print(Rowcount);
            row = spreadSheet.createRow(( Rowcount));
            cell = row.createCell(0);
            cell.setCellValue(ArmTNumArm.getText());
            cell = row.createCell(2);
            cell.setCellValue(ArmTChapa.getText());
            cell = row.createCell(3);
            cell.setCellValue(ArmTUsuario.getText());
            cell = row.createCell(1);
            cell.setCellValue(ArmTSetor.getText());
            Rowcount++;

            System.out.println("Done");
            try {

                fis.close();
                try (FileOutputStream outFile = new FileOutputStream(new File("BD Sistema de Armários.xls"))) {
                    workBook.write(outFile);
                }
            } catch (IOException ex) {
                Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        XWPFDocument doc = null;
        try {
            doc = new XWPFDocument(OPCPackage.open("Template.docx"));
        } catch (IOException | InvalidFormatException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (XWPFParagraph p : doc.getParagraphs()) {
            List<XWPFRun> runs = p.getRuns();
            if (runs != null) {
                runs.stream().forEach((r) -> {
                    String text = r.getText(0);
                    if (text != null && text.contains("PlaceHolder01")) {
                        text = text.replace("PlaceHolder01", ArmTUsuario.getText());
                        r.setText(text, 0);
                    }
                    if (text != null && text.contains("PlaceHolder02")) {
                        text = text.replace("PlaceHolder02", ArmTChapa.getText());
                        r.setText(text, 0);
                    }
                    if (text != null && text.contains("PlaceHolder03")) {
                        text = text.replace("PlaceHolder03", ArmTNumArm.getText());
                        r.setText(text, 0);
                    }
                });

                for (XWPFTable tbl : doc.getTables()) {
                    tbl.getRows().stream().forEach((row) -> {
                        row.getTableCells().stream().forEach((_item) -> {
                            p.getRuns().stream().forEach((r) -> {
                                String text = r.getText(0);
                                if (text != null && text.contains("PlaceHolder01")) {
                                    text = text.replace("{PlaceHolder01}", ArmTUsuario.getText());
                                    r.setText(text, 0);
                                    if (text != null && text.contains("PlaceHolder02")) {
                                        text = text.replace("{PlaceHolder02}", ArmTChapa.getText());
                                        r.setText(text, 0);
                                        if (text != null && text.contains("PlaceHolder03")) {
                                            text = text.replace("{PlaceHolder03}", ArmTNumArm.getText());
                                            r.setText(text, 0);
                                        }
                                    }
                                }
                            });
                        });
                    });
                }
            }
        }
        try {
            doc.write(new FileOutputStream("Termo.docx"));
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        int DocOpen=JOptionPane.showConfirmDialog (null, "Deseja abrir o termo para impressão?","Warning", JOptionPane.YES_NO_OPTION);
        if (DocOpen==JOptionPane.YES_OPTION) {
                File file = new File ("Termo.docx");
                Desktop desktop= Desktop.getDesktop();
                 try {
          desktop.open(file);
      } catch (IOException ex) {
          Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
      }
        }
                else{
                        jTabbedPane1.show();
                        }
                
        }
        else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }
        
    }//GEN-LAST:event_ArmBttnAddActionPerformed

    private void BttnRelPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BttnRelPrintActionPerformed
                if (LoggedIn==true){
                    
        PrintManager.printAction(RelDisp);
                }
                else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_BttnRelPrintActionPerformed

    private void BttnRelArmChapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BttnRelArmChapaActionPerformed
        if (LoggedIn==true){

                
        RelDisp.append("\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"Relatorio de Armários por chapa Aethra Resende" +"\n"+"\n");

        FileInputStream fis = null;
        try {
            fis = new FileInputStream("BD Sistema de Armários.xls");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        HSSFWorkbook workbook = null;
        try {
            workbook = new HSSFWorkbook(fis);
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        HSSFSheet sheet = workbook.getSheetAt(0);
        Iterator<Row> rows= sheet.rowIterator();
        while (rows.hasNext ()){
            // This will evaluate the cell, And any type of cell will return string value
            HSSFRow row = (HSSFRow) rows.next ();
            if(row.getRowNum()==0){
                continue;
            }
            Iterator<Cell> cells = row.cellIterator ();
            while (cells.hasNext ()){
                HSSFCell cell = (HSSFCell) cells.next();
                if (row.getCell(2).toString().contains(RelTChapa.getText()))
                {

                    RelDisp.append("\n"+"Numero do Armario:  "+row.getCell(0).toString());
                    RelDisp.append("\n"+"Setor:  "+row.getCell(1).toString());
                    RelDisp.append("\n"+"Usuario:  "+row.getCell(3).toString()+"\n"+"__________"+"\n");
                    break;
                }

            }

        }
        }
        
         else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_BttnRelArmChapaActionPerformed

    private void BttnRelLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BttnRelLimparActionPerformed
if(LoggedIn==true){
    RelDisp.setText("");
}   
else{
                JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);

}
// TODO add your handling code here:
    }//GEN-LAST:event_BttnRelLimparActionPerformed

    private void BttnArmPUsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BttnArmPUsActionPerformed
                if (LoggedIn==true){
        
        RelDisp.append("\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"Relatorio de Armários por Usuário Aethra Resende"+"\n"+"\n"+"\n");

        FileInputStream fis = null;
        try {
            fis = new FileInputStream("BD Sistema de Armários.xls");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        HSSFWorkbook workbook = null;
        try {
            workbook = new HSSFWorkbook(fis);
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        HSSFSheet sheet = workbook.getSheetAt(0);

        Iterator<Row> rows= sheet.rowIterator();
        while (rows.hasNext ()){
            HSSFRow row = (HSSFRow) rows.next ();
            if(row.getRowNum()==0){
                continue;
            }
            Iterator<Cell> cells = row.cellIterator ();
            while (cells.hasNext ()){
                HSSFCell cell = (HSSFCell) cells.next ();

                if (cell.toString().contains(RelTNome.getText()) ){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
            }

        }
        }
         else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_BttnArmPUsActionPerformed

    private void BttnRelListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BttnRelListActionPerformed
    if(LoggedIn==true){
        RelDisp.append("\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"Relatorio Geral de Armários Aethra Resende"+"\n"+"\n"+"\n");

        FileInputStream fis = null;
        try {
            fis = new FileInputStream("BD Sistema de Armários.xls");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        HSSFWorkbook workbook = null;
        try {
            workbook = new HSSFWorkbook(fis);
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        HSSFSheet sheet = workbook.getSheetAt(0);

        Iterator<Row> rows= sheet.rowIterator();
        while (rows.hasNext ()){
            HSSFRow row = (HSSFRow) rows.next ();
            if(row.getRowNum()==0){
                continue;
            }
            Iterator<Cell> cells = row.cellIterator ();
                                                   cells.next().setCellType(CellType.STRING);
            while (cells.hasNext ()){
                HSSFCell cell = (HSSFCell) cells.next ();

if ((row.getCell(0).getStringCellValue().contains("1"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    RelDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("2"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    RelDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("3"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    RelDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("4"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    RelDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("5"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    RelDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("6"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    RelDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("7"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    RelDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("8"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    RelDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("9"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    RelDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
            }

        } 
        }
         else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }// TODO add your handling code here:
    }//GEN-LAST:event_BttnRelListActionPerformed

    private void RelBttnNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RelBttnNumActionPerformed
     if (LoggedIn==true){
        RelDisp.append("\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"Relatorio de Armários por Numero Aethra Resende" +"\n"+"\n");

        FileInputStream fis = null;
        try {
            fis = new FileInputStream("BD Sistema de Armários.xls");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        HSSFWorkbook workbook = null;
        try {
            workbook = new HSSFWorkbook(fis);
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        HSSFSheet sheet = workbook.getSheetAt(0);
        Iterator<Row> rows= sheet.rowIterator();
        while (rows.hasNext ()){
            // This will evaluate the cell, And any type of cell will return string value
            HSSFRow row = (HSSFRow) rows.next ();
            if(row.getRowNum()==0){
                continue;
            }
            Iterator<Cell> cells = row.cellIterator ();
            DataFormatter formatter = new DataFormatter();
                            cells.next().setCellType(CellType.STRING);
            while (cells.hasNext ()){
                HSSFCell cell = (HSSFCell) cells.next();
                if ((row.getCell(0).getStringCellValue().equals(RelTNum.getText())))
                {
                System.out.println(row.getCell(0).getStringCellValue());
                

                    RelDisp.append("\n"+"Chapa do Usuario:  "+row.getCell(2).toString());
                    RelDisp.append("\n"+"Setor:  "+row.getCell(1).toString());
                    RelDisp.append("\n"+"Usuario:  "+row.getCell(3).toString()+"\n"+"__________"+"\n");
                    break;
                }
                
                        
                        
            }

        }
        }
    
         else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
     }   // TODO add your handling code here:
    }//GEN-LAST:event_RelBttnNumActionPerformed

    private void BttnArmDispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BttnArmDispActionPerformed
     if (LoggedIn==true){
        RelDisp.append("\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"Relatorio de Armários Disponiveis Aethra Resende"+"\n"+"\n"+"\n");

        FileInputStream fis = null;
        try {
            fis = new FileInputStream("BD Sistema de Armários.xls");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        HSSFWorkbook workbook = null;
        try {
            workbook = new HSSFWorkbook(fis);
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        HSSFSheet sheet = workbook.getSheetAt(0);

        Iterator<Row> rows= sheet.rowIterator();
        while (rows.hasNext ()){
            HSSFRow row = (HSSFRow) rows.next ();
            if(row.getRowNum()==0){
                continue;
            }
            Iterator<Cell> cells = row.cellIterator ();
                                                   cells.next().setCellType(CellType.STRING);
            while (cells.hasNext ()){
                HSSFCell cell = (HSSFCell) cells.next ();

if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("1"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("2"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("3"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("4"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("5"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("6"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("7"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("8"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("9"))){
                    RelDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    RelDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
            }
        }
}
     else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_BttnArmDispActionPerformed

    private void LogTUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogTUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LogTUserActionPerformed

    private void BttnRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BttnRegActionPerformed

        if (LogTUser.getText().equals ("")){
              JOptionPane.showMessageDialog(null,"Usuario em branco!","Warning",JOptionPane.OK_OPTION);
  
}
else{
        User.add(LogTUser.getText()+"/n");
        WritetoUserFile(LogTUser.getText());
// TODO add your handling code here:
    }//GEN-LAST:event_BttnRegActionPerformed
    if (LogPPass.getText().equals ("")){
                 JOptionPane.showMessageDialog(null,"Senha em branco!","Warning",JOptionPane.OK_OPTION);

    }
    else{
    Pass.add(LogPPass.getText()+"/n");
            WritetoPassFile(LogPPass.getText());

}
}
    private void BttnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BttnLoginActionPerformed
ReadFromUserFile();
ReadFromPasswordFile();

        if (User.contains(LogTUser.getText())&& Pass.contains(LogPPass.getText()) && !"".equals(LogTUser.getText())){
LoggedIn = true;
JOptionPane.showMessageDialog(null,"Entrou com Sucesso!","Warning",JOptionPane.OK_OPTION);
    LocalDateTime localdatetime = LocalDateTime.now();
    
WritetoUserFile(localdatetime.toString());// TODO add your handling code here:
    }//GEN-LAST:event_BttnLoginActionPerformed
else{
            JOptionPane.showMessageDialog(null,"Usuario e/ou Senha Incorreto!","Warning",JOptionPane.OK_OPTION);
        }
    }
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          if (LoggedIn==true){
        ConDisp.append("\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"Relatorio de Armários Disponiveis Aethra Resende"+"\n"+"\n"+"\n");

        FileInputStream fis = null;
        try {
            fis = new FileInputStream("BD Sistema de Armários.xls");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        HSSFWorkbook workbook = null;
        try {
            workbook = new HSSFWorkbook(fis);
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        HSSFSheet sheet = workbook.getSheetAt(0);

        Iterator<Row> rows= sheet.rowIterator();
        while (rows.hasNext ()){
            HSSFRow row = (HSSFRow) rows.next ();
            if(row.getRowNum()==0){
                continue;
            }
            Iterator<Cell> cells = row.cellIterator ();
                                                   cells.next().setCellType(CellType.STRING);
            while (cells.hasNext ()){
                HSSFCell cell = (HSSFCell) cells.next ();

if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("1"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("2"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("3"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("4"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("5"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("6"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("7"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("8"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(3).getStringCellValue().equals(""))&&(row.getCell(0).getStringCellValue().contains("9"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
            }
        }
}
     else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }  // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                if (LoggedIn==true){
        
        ConDisp.append("\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"Relatorio de Armários por Usuário Aethra Resende"+"\n"+"\n"+"\n");

        FileInputStream fis = null;
        try {
            fis = new FileInputStream("BD Sistema de Armários.xls");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        HSSFWorkbook workbook = null;
        try {
            workbook = new HSSFWorkbook(fis);
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        HSSFSheet sheet = workbook.getSheetAt(0);

        Iterator<Row> rows= sheet.rowIterator();
        while (rows.hasNext ()){
            HSSFRow row = (HSSFRow) rows.next ();
            if(row.getRowNum()==0){
                continue;
            }
            Iterator<Cell> cells = row.cellIterator ();
            while (cells.hasNext ()){
                HSSFCell cell = (HSSFCell) cells.next ();

                if (cell.toString().contains(ConTNome.getText()) ){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
            }

        }
        }
         else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
if(LoggedIn==true){
    ConDisp.setText("");
}   
else{
                JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);

}        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       if(LoggedIn==true){
        ConDisp.append("\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"Relatorio Geral de Armários Aethra Resende"+"\n"+"\n"+"\n");

        FileInputStream fis = null;
        try {
            fis = new FileInputStream("BD Sistema de Armários.xls");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        HSSFWorkbook workbook = null;
        try {
            workbook = new HSSFWorkbook(fis);
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        HSSFSheet sheet = workbook.getSheetAt(0);

        Iterator<Row> rows= sheet.rowIterator();
        while (rows.hasNext ()){
            HSSFRow row = (HSSFRow) rows.next ();
            if(row.getRowNum()==0){
                continue;
            }
            Iterator<Cell> cells = row.cellIterator ();
                                                   cells.next().setCellType(CellType.STRING);
            while (cells.hasNext ()){
                HSSFCell cell = (HSSFCell) cells.next ();

if ((row.getCell(0).getStringCellValue().contains("1"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    ConDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("2"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    ConDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("3"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    ConDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("4"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    ConDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("5"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    ConDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("6"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    ConDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("7"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    ConDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("8"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    ConDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
if ((row.getCell(0).getStringCellValue().contains("9"))){
                    ConDisp.append("Numero do Armario:  " + row.getCell(0).toString()+"\n" );
                    ConDisp.append("Usuario:  " + row.getCell(3).toString()+"\n");
                    ConDisp.append("Chapa:  " + row.getCell(2).toString()+"\n");
                    ConDisp.append("Setor:  " + row.getCell(1).toString()+"\n"+"____________________"+"\n");

                    break;
                }
            }

        } 
        }
         else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }     // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
     if (LoggedIn==true){
        ConDisp.append("\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"Relatorio de Armários por Numero Aethra Resende" +"\n"+"\n");

        FileInputStream fis = null;
        try {
            fis = new FileInputStream("BD Sistema de Armários.xls");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        HSSFWorkbook workbook = null;
        try {
            workbook = new HSSFWorkbook(fis);
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        HSSFSheet sheet = workbook.getSheetAt(0);
        Iterator<Row> rows= sheet.rowIterator();
        while (rows.hasNext ()){
            // This will evaluate the cell, And any type of cell will return string value
            HSSFRow row = (HSSFRow) rows.next ();
            if(row.getRowNum()==0){
                continue;
            }
            Iterator<Cell> cells = row.cellIterator ();
            DataFormatter formatter = new DataFormatter();
                            cells.next().setCellType(CellType.STRING);
            while (cells.hasNext ()){
                HSSFCell cell = (HSSFCell) cells.next();
                if ((row.getCell(0).getStringCellValue().equals(ConTNum.getText())))
                {
                System.out.println(row.getCell(0).getStringCellValue());
                

                    ConDisp.append("\n"+"Chapa do Usuario:  "+row.getCell(2).toString());
                    ConDisp.append("\n"+"Setor:  "+row.getCell(1).toString());
                    ConDisp.append("\n"+"Usuario:  "+row.getCell(3).toString()+"\n"+"__________"+"\n");
                    break;
                }
                
                        
                        
            }

        }
        }
    
         else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
     }          // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (LoggedIn==true){

                
        ConDisp.append("\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"\n"+"Relatorio de Armários por chapa Aethra Resende" +"\n"+"\n");

        FileInputStream fis = null;
        try {
            fis = new FileInputStream("BD Sistema de Armários.xls");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        HSSFWorkbook workbook = null;
        try {
            workbook = new HSSFWorkbook(fis);
        } catch (IOException ex) {
            Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        HSSFSheet sheet = workbook.getSheetAt(0);
        Iterator<Row> rows= sheet.rowIterator();
        while (rows.hasNext ()){
            // This will evaluate the cell, And any type of cell will return string value
            HSSFRow row = (HSSFRow) rows.next ();
            if(row.getRowNum()==0){
                continue;
            }
            Iterator<Cell> cells = row.cellIterator ();
            while (cells.hasNext ()){
                HSSFCell cell = (HSSFCell) cells.next();
                if (row.getCell(2).toString().contains(ConTChapa.getText()))
                {

                    ConDisp.append("\n"+"Numero do Armario:  "+row.getCell(0).toString());
                    ConDisp.append("\n"+"Setor:  "+row.getCell(1).toString());
                    ConDisp.append("\n"+"Usuario:  "+row.getCell(3).toString()+"\n"+"__________"+"\n");
                    break;
                }

            }

        }
        }
        
         else{
            JOptionPane.showMessageDialog(null,"Realize Login primeiro!","Warning",JOptionPane.OK_OPTION);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SistemadeArmariosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SistemadeArmariosGUI().setVisible(true);
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ArmBttnAdd;
    private javax.swing.JButton ArmBttnDel;
    private javax.swing.JLabel ArmLNumArm;
    private javax.swing.JLabel ArmLNumPat;
    private javax.swing.JLabel ArmLSetor;
    private javax.swing.JLabel ArmLUsuario;
    private javax.swing.JTextField ArmTChapa;
    public javax.swing.JTextField ArmTNumArm;
    private javax.swing.JTextField ArmTSetor;
    private javax.swing.JTextField ArmTUsuario;
    public javax.swing.JPanel Armarios;
    private javax.swing.JButton BttnArmDisp;
    private javax.swing.JButton BttnArmPUs;
    private javax.swing.JButton BttnLogin;
    private javax.swing.JButton BttnReg;
    private javax.swing.JButton BttnRelArmChapa;
    private javax.swing.JButton BttnRelLimpar;
    private javax.swing.JButton BttnRelList;
    private javax.swing.JButton BttnRelPrint;
    private javax.swing.JTextArea ConDisp;
    private javax.swing.JTextField ConTChapa;
    private javax.swing.JTextField ConTNome;
    private javax.swing.JTextField ConTNum;
    private javax.swing.JPasswordField LogPPass;
    private javax.swing.JTextField LogTUser;
    private javax.swing.JButton RelBttnNum;
    private javax.swing.JTextArea RelDisp;
    private javax.swing.JTextField RelTChapa;
    private javax.swing.JTextField RelTNome;
    private javax.swing.JTextField RelTNum;
    private javax.swing.JInternalFrame Relatorios;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
